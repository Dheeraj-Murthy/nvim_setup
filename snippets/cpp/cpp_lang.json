{
    "basic": {
        "prefix": "basic",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "int main()",
            "{",
            "    ${0}",
            "    return 0;",
            "}"
        ]
    },
    "basic template": {
        "prefix": "summer",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "using i64 = long long int;",
            "#define deb(...) debug(#__VA_ARGS__, __VA_ARGS__)",
            "#define debarr(x) for(auto i: x) cout << i << ' '; cout << endl;",
            "template<typename T>",
            "void debug(const char* t, T&& v) {cout << t << \" = \" << v << '\\n';}",
            "template<typename T, typename... Args>",
            "void debug(const char* n, T&& v, Args&&... args) {",
            "    const char* c = strchr(n, ','); cout.write(n, c - n) << \" = \" << v << \" |\";",
            "    debug(c + 1, std::forward<Args>(args)...);",
            "}",
            "",
            "constexpr int mod = 1'000'000'007;",
            "// constexpr int mod = 998244353;",
            "",
            "// Problem Statement",
            "/*",
            "    ",
            "*/",
            " ",
            "// Small Observatins",
            "/*",
            "    ",
            "*/",
            "",
            "",
            "/*",
            " ",
            "*/",
            " ",
            " ",
            "// Claims on algo ",
            "/*  ",
            "    ",
            "*/",
            "",
            "void solve() {",
            "    ${0}",
            "}",
            "",
            "",
            "int main() {",
            "    ios::sync_with_stdio(false);",
            "    cin.tie(nullptr);",
            "",
            "    int t = 1;",
            "    cin >> t;",
            "    for(int i = 1; i <= t; i++) {",
            "        // cout << \"\\nCase #\" << i << \":\\n\";",
            "        solve();",
            "    }",
            "",
            "    return 0;",
            "}",
            "",
            "// Golden Rules",
            "/*",
            "    Solutions are simple.",
            " ",
            "    Proofs are simple.",
            " ",
            "    Implementations are simple.",
            "*/",
            ""
        ],
        "description": "basic template"
    } 
}
