{
  "basic": {
    "prefix": "basic",
    "body": [
      "#include<bits/stdc++.h>",
      "using namespace std;",
      "",
      "int main()",
      "{",
      "    ${0}",
      "    return 0;",
      "}"
    ]
  },
  "old_contest": {
    "prefix": "old_contest",
    "body": [
      "#include<bits/stdc++.h>",
      "using namespace std;",
      "#define fo(i,n) for(int i=0;i<n;i++)",
      "#define foo(i,k,n) for(int i=k;k<n?i<n:i>n;k<n?i+=1:i-=1)",
      "#define ll long long",
      "#define deb(x) cout << #x << \"=\" << x << endl",
      "#define deb2(x, y) cout << #x << \"=\" << x << \",\" << #y << \"=\" << y << endl",
      "#define debarr(arr) fo(i, arr.size()) cout <<  arr[i] << ' '; cout<< endl;",
      "#define pb push_back",
      "#define mp make_pair",
      "#define F first",
      "#define S second",
      "#define all(x) x.begin(), x.end()",
      "#define clr(x) memset(x, 0, sizeof(x))",
      "#define sortall(x) sort(all(x))",
      "#define tr(it, a) for(auto it = a.begin(); it != a.end(); it++)",
      "#define PI 3.1415926535897932384626",
      "typedef pair<int, int>pii;",
      "typedef pair<ll, ll>pl;",
      "typedef vector<int>vi;",
      "typedef vector<ll>vl;",
      "typedef vector<pii>vpii;",
      "typedef vector<pl>vpl;",
      "typedef vector<vi>vvi;",
      "typedef vector<vl>vvl;",
      "mt19937_64 rang(chrono::high_resolution_clock::now().time_since_epoch().count());",
      "int rng(int lim) {",
      "    uniform_int_distribution<int> uid(0,lim-1);",
      "    return uid(rang);",
      "}",
      "const int mod = 1000000007;",
      "const int N = 1e6 + 7, M = N;",
      "//=====================================================================================",
      "",
      "void solve() {",
      "    int i, j, n;",
      "    ${0}",
      "}",
      "",
      "int main() {",
      "",
      "    //freopen(\"test.in\", \"r\", stdin);",
      "    //freopen(\"test.out\", \"w\", stdout);",
      "",
      "    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);",
      "    srand(chrono::high_resolution_clock::now().time_since_epoch().count());",
      "",
      "    int t = 1;",
      "    cin >> t;",
      "    while(t--) {",
      "        solve();",
      "    }",
      "    return 0;",
      "}",
      ""
    ]
  }
}
